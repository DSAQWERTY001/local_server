PUT output;
    output.gl_Position = gl_Position;
    output.dx_Position.x = gl_Position.x;
    output.dx_Position.y = clipControlOrigin * gl_Position.y;
    if (clipControlZeroToOne)
    {
        output.dx_Position.z = gl_Position.z;
    } else {
        output.dx_Position.z = (gl_Position.z + gl_Position.w) * 0.5;
    }
    output.dx_Position.w = gl_Position.w;
    output.gl_FragCoord = gl_Position;
    output.v0 = _vinColor_S0;
    output.v1 = _vTextureCoords_S0;
    output.v2 = _vTransformedCoords_8_S0;

    return output;
}

VS_OUTPUT main(VS_INPUT input){
    initAttributes(input);

float _texIdx3094 = {0.0};
float2 _unormTexCoords3095 = vec2_ctor(_inTextureCoords.x, _inTextureCoords.y);
(_vTextureCoords_S0 = (_unormTexCoords3095 * _uAtlasSizeInv_S0));
(_vTexIndex_S0 = _texIdx3094);
(_vinColor_S0 = _inColor);
float2 __tmp_0_inPosition3096 = ((_ulocalMatrix_S0.xz * _inPosition) + _ulocalMatrix_S0.yw);
(gl_Position = vec4_ctor(_inPosition, 0.0, 1.0));
{
(_vTransformedCoords_8_S0 = mul(transpose(_umatrix_S1_c1_c0_c1), vec3_ctor(__tmp_0_inPosition3096, 1.0)).xy);
}
(gl_Position = vec4_ctor(((gl_Position.xy * _sk_RTAdjust.xz) + (gl_Position.ww * _