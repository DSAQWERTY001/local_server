 float4(0, 0, 0, 0);

cbuffer DriverConstants : register(b1)
{
    float4 dx_ViewCoords : packoffset(c1);
    float3 dx_DepthFront : packoffset(c2);
    float2 dx_ViewScale : packoffset(c3);
    struct SamplerMetadata
    {
        int baseLevel;
        int internalFormatBits;
        int wrapModes;
        int padding;
        int4 intBorderColor;
    };
    SamplerMetadata samplerMetadata[3] : packoffset(c4);
};

#define GL_USES_FRAG_COLOR
float4 gl_texture2D(uint samplerIndex, float2 t, float bias)
{
    return textures2D[samplerIndex].SampleBias(samplers2D[samplerIndex], float2(t.x, t.y), bias);
}

#define GL_USES_FRAG_COORD
float f_src_tf_S1_c0_hh(in float _x)
{
float _G3104 = _uSrcTF_S1_c0[0];
float _A3105 = _uSrcTF_S1_c0[1];
float _B3106 = _uSrcTF_S1_c0[2];
float _C3107 = _uSrcTF_S1_c0[3];
float _D3108 = _uSrcTF_S1_c0[4];
float _E3109 = _uSrcTF_S1_c0[5];
float _F3110 = _uSrcTF_S1_c0[6];
float _s3111 = sign(_x);
(_x = abs(_x));
float sc41 = {0};
if ((_x < _D3108))
{
(sc41 = ((_C3107 * _x) + _F3110));
}
else
{
(sc41 = (pow(((_A3105 * _x) + _B3106), _G3104) + _E3109)